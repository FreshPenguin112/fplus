"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _antlr = _interopRequireDefault(require("antlr4"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
// Generated from fplus.g4 by ANTLR 4.13.1
// jshint ignore: start

const serializedATN = [4, 0, 32, 268, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25, 2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2, 31, 7, 31, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 72, 8, 1, 10, 1, 12, 1, 75, 9, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 5, 2, 85, 8, 2, 10, 2, 12, 2, 88, 9, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 5, 3, 101, 8, 3, 10, 3, 12, 3, 104, 9, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 5, 3, 111, 8, 3, 10, 3, 12, 3, 114, 9, 3, 1, 3, 3, 3, 117, 8, 3, 1, 4, 3, 4, 120, 8, 4, 1, 4, 4, 4, 123, 8, 4, 11, 4, 12, 4, 124, 1, 5, 3, 5, 128, 8, 5, 1, 5, 5, 5, 131, 8, 5, 10, 5, 12, 5, 134, 9, 5, 1, 5, 1, 5, 4, 5, 138, 8, 5, 11, 5, 12, 5, 139, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 3, 6, 151, 8, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 19, 1, 19, 1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 1, 22, 1, 23, 1, 23, 1, 24, 1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 27, 1, 28, 1, 28, 5, 28, 235, 8, 28, 10, 28, 12, 28, 238, 9, 28, 1, 29, 1, 29, 1, 29, 5, 29, 243, 8, 29, 10, 29, 12, 29, 246, 9, 29, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 5, 30, 254, 8, 30, 10, 30, 12, 30, 257, 9, 30, 1, 30, 1, 30, 1, 30, 1, 31, 4, 31, 263, 8, 31, 11, 31, 12, 31, 264, 1, 31, 1, 31, 3, 86, 244, 255, 0, 32, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 1, 0, 7, 2, 0, 10, 10, 13, 13, 1, 0, 39, 39, 1, 0, 34, 34, 1, 0, 48, 57, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 3, 0, 9, 10, 13, 13, 32, 32, 284, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 1, 65, 1, 0, 0, 0, 3, 67, 1, 0, 0, 0, 5, 78, 1, 0, 0, 0, 7, 116, 1, 0, 0, 0, 9, 119, 1, 0, 0, 0, 11, 127, 1, 0, 0, 0, 13, 150, 1, 0, 0, 0, 15, 152, 1, 0, 0, 0, 17, 158, 1, 0, 0, 0, 19, 167, 1, 0, 0, 0, 21, 171, 1, 0, 0, 0, 23, 174, 1, 0, 0, 0, 25, 179, 1, 0, 0, 0, 27, 184, 1, 0, 0, 0, 29, 191, 1, 0, 0, 0, 31, 197, 1, 0, 0, 0, 33, 200, 1, 0, 0, 0, 35, 206, 1, 0, 0, 0, 37, 210, 1, 0, 0, 0, 39, 212, 1, 0, 0, 0, 41, 214, 1, 0, 0, 0, 43, 216, 1, 0, 0, 0, 45, 218, 1, 0, 0, 0, 47, 220, 1, 0, 0, 0, 49, 222, 1, 0, 0, 0, 51, 224, 1, 0, 0, 0, 53, 226, 1, 0, 0, 0, 55, 228, 1, 0, 0, 0, 57, 232, 1, 0, 0, 0, 59, 239, 1, 0, 0, 0, 61, 250, 1, 0, 0, 0, 63, 262, 1, 0, 0, 0, 65, 66, 5, 61, 0, 0, 66, 2, 1, 0, 0, 0, 67, 68, 5, 45, 0, 0, 68, 69, 5, 45, 0, 0, 69, 73, 1, 0, 0, 0, 70, 72, 8, 0, 0, 0, 71, 70, 1, 0, 0, 0, 72, 75, 1, 0, 0, 0, 73, 71, 1, 0, 0, 0, 73, 74, 1, 0, 0, 0, 74, 76, 1, 0, 0, 0, 75, 73, 1, 0, 0, 0, 76, 77, 6, 1, 0, 0, 77, 4, 1, 0, 0, 0, 78, 79, 5, 45, 0, 0, 79, 80, 5, 45, 0, 0, 80, 81, 5, 91, 0, 0, 81, 82, 5, 91, 0, 0, 82, 86, 1, 0, 0, 0, 83, 85, 9, 0, 0, 0, 84, 83, 1, 0, 0, 0, 85, 88, 1, 0, 0, 0, 86, 87, 1, 0, 0, 0, 86, 84, 1, 0, 0, 0, 87, 89, 1, 0, 0, 0, 88, 86, 1, 0, 0, 0, 89, 90, 5, 93, 0, 0, 90, 91, 5, 93, 0, 0, 91, 92, 5, 45, 0, 0, 92, 93, 5, 45, 0, 0, 93, 94, 1, 0, 0, 0, 94, 95, 6, 2, 0, 0, 95, 6, 1, 0, 0, 0, 96, 102, 5, 39, 0, 0, 97, 101, 8, 1, 0, 0, 98, 99, 5, 92, 0, 0, 99, 101, 9, 0, 0, 0, 100, 97, 1, 0, 0, 0, 100, 98, 1, 0, 0, 0, 101, 104, 1, 0, 0, 0, 102, 100, 1, 0, 0, 0, 102, 103, 1, 0, 0, 0, 103, 105, 1, 0, 0, 0, 104, 102, 1, 0, 0, 0, 105, 117, 5, 39, 0, 0, 106, 112, 5, 34, 0, 0, 107, 111, 8, 2, 0, 0, 108, 109, 5, 92, 0, 0, 109, 111, 9, 0, 0, 0, 110, 107, 1, 0, 0, 0, 110, 108, 1, 0, 0, 0, 111, 114, 1, 0, 0, 0, 112, 110, 1, 0, 0, 0, 112, 113, 1, 0, 0, 0, 113, 115, 1, 0, 0, 0, 114, 112, 1, 0, 0, 0, 115, 117, 5, 34, 0, 0, 116, 96, 1, 0, 0, 0, 116, 106, 1, 0, 0, 0, 117, 8, 1, 0, 0, 0, 118, 120, 5, 45, 0, 0, 119, 118, 1, 0, 0, 0, 119, 120, 1, 0, 0, 0, 120, 122, 1, 0, 0, 0, 121, 123, 7, 3, 0, 0, 122, 121, 1, 0, 0, 0, 123, 124, 1, 0, 0, 0, 124, 122, 1, 0, 0, 0, 124, 125, 1, 0, 0, 0, 125, 10, 1, 0, 0, 0, 126, 128, 5, 45, 0, 0, 127, 126, 1, 0, 0, 0, 127, 128, 1, 0, 0, 0, 128, 132, 1, 0, 0, 0, 129, 131, 7, 3, 0, 0, 130, 129, 1, 0, 0, 0, 131, 134, 1, 0, 0, 0, 132, 130, 1, 0, 0, 0, 132, 133, 1, 0, 0, 0, 133, 135, 1, 0, 0, 0, 134, 132, 1, 0, 0, 0, 135, 137, 5, 46, 0, 0, 136, 138, 7, 3, 0, 0, 137, 136, 1, 0, 0, 0, 138, 139, 1, 0, 0, 0, 139, 137, 1, 0, 0, 0, 139, 140, 1, 0, 0, 0, 140, 12, 1, 0, 0, 0, 141, 142, 5, 116, 0, 0, 142, 143, 5, 114, 0, 0, 143, 144, 5, 117, 0, 0, 144, 151, 5, 101, 0, 0, 145, 146, 5, 102, 0, 0, 146, 147, 5, 97, 0, 0, 147, 148, 5, 108, 0, 0, 148, 149, 5, 115, 0, 0, 149, 151, 5, 101, 0, 0, 150, 141, 1, 0, 0, 0, 150, 145, 1, 0, 0, 0, 151, 14, 1, 0, 0, 0, 152, 153, 5, 112, 0, 0, 153, 154, 5, 114, 0, 0, 154, 155, 5, 105, 0, 0, 155, 156, 5, 110, 0, 0, 156, 157, 5, 116, 0, 0, 157, 16, 1, 0, 0, 0, 158, 159, 5, 102, 0, 0, 159, 160, 5, 117, 0, 0, 160, 161, 5, 110, 0, 0, 161, 162, 5, 99, 0, 0, 162, 163, 5, 116, 0, 0, 163, 164, 5, 105, 0, 0, 164, 165, 5, 111, 0, 0, 165, 166, 5, 110, 0, 0, 166, 18, 1, 0, 0, 0, 167, 168, 5, 101, 0, 0, 168, 169, 5, 110, 0, 0, 169, 170, 5, 100, 0, 0, 170, 20, 1, 0, 0, 0, 171, 172, 5, 105, 0, 0, 172, 173, 5, 102, 0, 0, 173, 22, 1, 0, 0, 0, 174, 175, 5, 116, 0, 0, 175, 176, 5, 104, 0, 0, 176, 177, 5, 101, 0, 0, 177, 178, 5, 110, 0, 0, 178, 24, 1, 0, 0, 0, 179, 180, 5, 101, 0, 0, 180, 181, 5, 108, 0, 0, 181, 182, 5, 115, 0, 0, 182, 183, 5, 101, 0, 0, 183, 26, 1, 0, 0, 0, 184, 185, 5, 101, 0, 0, 185, 186, 5, 108, 0, 0, 186, 187, 5, 115, 0, 0, 187, 188, 5, 101, 0, 0, 188, 189, 5, 105, 0, 0, 189, 190, 5, 102, 0, 0, 190, 28, 1, 0, 0, 0, 191, 192, 5, 119, 0, 0, 192, 193, 5, 104, 0, 0, 193, 194, 5, 105, 0, 0, 194, 195, 5, 108, 0, 0, 195, 196, 5, 101, 0, 0, 196, 30, 1, 0, 0, 0, 197, 198, 5, 100, 0, 0, 198, 199, 5, 111, 0, 0, 199, 32, 1, 0, 0, 0, 200, 201, 5, 108, 0, 0, 201, 202, 5, 111, 0, 0, 202, 203, 5, 99, 0, 0, 203, 204, 5, 97, 0, 0, 204, 205, 5, 108, 0, 0, 205, 34, 1, 0, 0, 0, 206, 207, 5, 108, 0, 0, 207, 208, 5, 101, 0, 0, 208, 209, 5, 116, 0, 0, 209, 36, 1, 0, 0, 0, 210, 211, 5, 40, 0, 0, 211, 38, 1, 0, 0, 0, 212, 213, 5, 41, 0, 0, 213, 40, 1, 0, 0, 0, 214, 215, 5, 123, 0, 0, 215, 42, 1, 0, 0, 0, 216, 217, 5, 125, 0, 0, 217, 44, 1, 0, 0, 0, 218, 219, 5, 91, 0, 0, 219, 46, 1, 0, 0, 0, 220, 221, 5, 93, 0, 0, 221, 48, 1, 0, 0, 0, 222, 223, 5, 46, 0, 0, 223, 50, 1, 0, 0, 0, 224, 225, 5, 58, 0, 0, 225, 52, 1, 0, 0, 0, 226, 227, 5, 44, 0, 0, 227, 54, 1, 0, 0, 0, 228, 229, 5, 59, 0, 0, 229, 230, 1, 0, 0, 0, 230, 231, 6, 27, 0, 0, 231, 56, 1, 0, 0, 0, 232, 236, 7, 4, 0, 0, 233, 235, 7, 5, 0, 0, 234, 233, 1, 0, 0, 0, 235, 238, 1, 0, 0, 0, 236, 234, 1, 0, 0, 0, 236, 237, 1, 0, 0, 0, 237, 58, 1, 0, 0, 0, 238, 236, 1, 0, 0, 0, 239, 240, 5, 37, 0, 0, 240, 244, 5, 91, 0, 0, 241, 243, 9, 0, 0, 0, 242, 241, 1, 0, 0, 0, 243, 246, 1, 0, 0, 0, 244, 245, 1, 0, 0, 0, 244, 242, 1, 0, 0, 0, 245, 247, 1, 0, 0, 0, 246, 244, 1, 0, 0, 0, 247, 248, 5, 93, 0, 0, 248, 249, 5, 37, 0, 0, 249, 60, 1, 0, 0, 0, 250, 251, 5, 37, 0, 0, 251, 255, 5, 123, 0, 0, 252, 254, 9, 0, 0, 0, 253, 252, 1, 0, 0, 0, 254, 257, 1, 0, 0, 0, 255, 256, 1, 0, 0, 0, 255, 253, 1, 0, 0, 0, 256, 258, 1, 0, 0, 0, 257, 255, 1, 0, 0, 0, 258, 259, 5, 125, 0, 0, 259, 260, 5, 37, 0, 0, 260, 62, 1, 0, 0, 0, 261, 263, 7, 6, 0, 0, 262, 261, 1, 0, 0, 0, 263, 264, 1, 0, 0, 0, 264, 262, 1, 0, 0, 0, 264, 265, 1, 0, 0, 0, 265, 266, 1, 0, 0, 0, 266, 267, 6, 31, 0, 0, 267, 64, 1, 0, 0, 0, 18, 0, 73, 86, 100, 102, 110, 112, 116, 119, 124, 127, 132, 139, 150, 236, 244, 255, 264, 1, 6, 0, 0];
const atn = new _antlr.default.atn.ATNDeserializer().deserialize(serializedATN);
const decisionsToDFA = atn.decisionToState.map((ds, index) => new _antlr.default.dfa.DFA(ds, index));
class fplusLexer extends _antlr.default.Lexer {
  static grammarFileName = "fplus.g4";
  static channelNames = ["DEFAULT_TOKEN_CHANNEL", "HIDDEN"];
  static modeNames = ["DEFAULT_MODE"];
  static literalNames = [null, "'='", null, null, null, null, null, null, "'print'", "'function'", "'end'", "'if'", "'then'", "'else'", "'elseif'", "'while'", "'do'", "'local'", "'let'", "'('", "')'", "'{'", "'}'", "'['", "']'", "'.'", "':'", "','", "';'"];
  static symbolicNames = [null, null, "COMMENT", "MLCOMMENT", "STRING", "INTEGER", "FLOAT", "BOOLEAN", "PRINT", "FUNCTION", "END", "IF", "THEN", "ELSE", "ELSEIF", "WHILE", "DO", "LOCAL", "LET", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LSQUARE", "RSQUARE", "DOT", "COLON", "COMMA", "SEMICOLON", "ID", "INLINE_JS_EXPR", "JAVASCRIPT_EMBED", "WS"];
  static ruleNames = ["T__0", "COMMENT", "MLCOMMENT", "STRING", "INTEGER", "FLOAT", "BOOLEAN", "PRINT", "FUNCTION", "END", "IF", "THEN", "ELSE", "ELSEIF", "WHILE", "DO", "LOCAL", "LET", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LSQUARE", "RSQUARE", "DOT", "COLON", "COMMA", "SEMICOLON", "ID", "INLINE_JS_EXPR", "JAVASCRIPT_EMBED", "WS"];
  constructor(input) {
    super(input);
    this._interp = new _antlr.default.atn.LexerATNSimulator(this, atn, decisionsToDFA, new _antlr.default.atn.PredictionContextCache());
  }
}
exports.default = fplusLexer;
fplusLexer.EOF = _antlr.default.Token.EOF;
fplusLexer.T__0 = 1;
fplusLexer.COMMENT = 2;
fplusLexer.MLCOMMENT = 3;
fplusLexer.STRING = 4;
fplusLexer.INTEGER = 5;
fplusLexer.FLOAT = 6;
fplusLexer.BOOLEAN = 7;
fplusLexer.PRINT = 8;
fplusLexer.FUNCTION = 9;
fplusLexer.END = 10;
fplusLexer.IF = 11;
fplusLexer.THEN = 12;
fplusLexer.ELSE = 13;
fplusLexer.ELSEIF = 14;
fplusLexer.WHILE = 15;
fplusLexer.DO = 16;
fplusLexer.LOCAL = 17;
fplusLexer.LET = 18;
fplusLexer.LPAREN = 19;
fplusLexer.RPAREN = 20;
fplusLexer.LBRACE = 21;
fplusLexer.RBRACE = 22;
fplusLexer.LSQUARE = 23;
fplusLexer.RSQUARE = 24;
fplusLexer.DOT = 25;
fplusLexer.COLON = 26;
fplusLexer.COMMA = 27;
fplusLexer.SEMICOLON = 28;
fplusLexer.ID = 29;
fplusLexer.INLINE_JS_EXPR = 30;
fplusLexer.JAVASCRIPT_EMBED = 31;
fplusLexer.WS = 32;